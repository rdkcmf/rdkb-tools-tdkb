##########################################################################
# If not stated otherwise in this file or this component's Licenses.txt
# file the following copyright and licenses apply:
#
# Copyright 2020 RDK Management
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##########################################################################
'''
<?xml version='1.0' encoding='utf-8'?>
<xml>
  <id></id>
  <!-- Do not edit id. This will be auto filled while exporting. If you are adding a new script keep the id empty -->
  <version>2</version>
  <!-- Do not edit version. This will be auto incremented while updating. If you are adding a new script you can keep the vresion as 1 -->
  <name>TS_ETHWAN_GetMACsecRequiredEnable</name>
  <!-- If you are adding a new script you can specify the script name. Script Name should be unique same as this file name with out .py extension -->
  <primitive_test_id></primitive_test_id>
  <!-- Do not change primitive_test_id if you are editing an existing script. -->
  <primitive_test_name>EthWAN_DoNothing</primitive_test_name>
  <!--  -->
  <primitive_test_version>1</primitive_test_version>
  <!--  -->
  <status>FREE</status>
  <!--  -->
  <synopsis>Check if the Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.MACsecRequired.Enable is enabled if only the device is in ethwan mode</synopsis>
  <!--  -->
  <groups_id />
  <!--  -->
  <execution_time>15</execution_time>
  <!--  -->
  <long_duration>false</long_duration>
  <!--  -->
  <advanced_script>false</advanced_script>
  <!-- execution_time is the time out time for test execution -->
  <remarks></remarks>
  <!-- Reason for skipping the tests if marked to skip -->
  <skip>false</skip>
  <!--  -->
  <box_types>
    <box_type>Broadband</box_type>
    <!--  -->
  </box_types>
  <rdk_versions>
    <rdk_version>RDKB</rdk_version>
    <!--  -->
  </rdk_versions>
  <test_cases>
    <test_case_id>TC_ETHWAN_16</test_case_id>
    <test_objective>This test case will check if the Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.MACsecRequired.Enable is enabled by default in ethwan device</test_objective>
    <test_type>Positive</test_type>
    <test_setup>Broadband</test_setup>
    <pre_requisite>1. The broadband device should be in ETHWAN setup
2. The EthWAN mode should be enabled
3. TDK Agent must be up and running</pre_requisite>
    <api_or_interface_used>pam_GetParameterValues</api_or_interface_used>
    <input_parameters>Name of the Parameter
Type of the value to be get</input_parameters>
    <automation_approch>1.Function which needs to be tested will be configured in Test Manager GUI.
2.Python Script will be generated by Test Manager with provided arguments in configure page.
3.TM will load the PAM and TAD library via Test agent
4.Get the current operational mode using Device.DeviceInfo.X_RDKCENTRAL-COM_EthernetWAN.CurrentOperationalMode and check wether WAN is enabled Device.Ethernet.X_RDKCENTRAL-COM_WAN.Enabled
5.Get the enable state of Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.MACsecRequired.Enable
6.if the device is ETHWAN mode Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.MACsecRequired.Enable
7.unload the loaded modules
</automation_approch>
    <expected_output>In ETHWAN mode the Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.MACsecRequired.Enable should be enabled by default</expected_output>
    <priority>High</priority>
    <test_stub_interface>ETHWAN</test_stub_interface>
    <test_script>TS_ETHWAN_GetMACsecRequiredEnable</test_script>
    <skipped>No</skipped>
    <release_version>M77</release_version>
    <remarks>None</remarks>
  </test_cases>
  <script_tags />
</xml>
'''
# use tdklib library,which provides a wrapper for tdk testcase script
import tdklib;
import tdkutility;
from tdkutility import *
#Test component to be tested
obj = tdklib.TDKScriptingLibrary("pam","1");
obj1 = tdklib.TDKScriptingLibrary("tad","1");
#IP and Port of box, No need to change,
#This will be replaced with correspoing Box Ip and port while executing script
ip = <ipaddress>
port = <port>
obj.configureTestCase(ip,port,'TS_PAM_GetMACsecRequiredEnable');
obj1.configureTestCase(ip,port,'TS_PAM_GetMACsecRequiredEnable');
#Get the result of connection with test component and DUT
loadmodulestatus =obj.getLoadModuleResult();
loadmodulestatus1 =obj1.getLoadModuleResult();

print "[LIB LOAD STATUS]  :  %s" %loadmodulestatus;
print "[LIB LOAD STATUS]  :  %s" %loadmodulestatus1;

if "SUCCESS" in loadmodulestatus.upper()  and "SUCCESS" in loadmodulestatus1.upper():
    obj.setLoadModuleStatus("SUCCESS");
    obj1.setLoadModuleStatus("SUCCESS");
    expectedresult="SUCCESS";
    tdkTestObj = obj1.createTestStep('TADstub_Get');
    paramList=["Device.Ethernet.X_RDKCENTRAL-COM_WAN.Enabled","Device.DeviceInfo.X_RDKCENTRAL-COM_EthernetWAN.CurrentOperationalMode","Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.MACsecRequired.Enable"]
    tdkTestObj,status,Value = getMultipleParameterValues(obj1,paramList)

    if expectedresult in status and Value[0] == "true":
       tdkTestObj.setResultStatus("SUCCESS");
       print "TEST STEP 1: Get the WAN Enabled Mode as true";
       print "EXPECTED RESULT 1: Should get the WAN Enabled Mode as true ";
       print "ACTUAL RESULT 1: WAN Enabled  Mode is ",Value[0];
       #Get the result of execution
       print "[TEST EXECUTION RESULT] : SUCCESS";

       print "********************************"
       print "The Device is in ETHWAN mode" ;
       print "*******************************"

       if Value[1]== "Ethernet":
          tdkTestObj.setResultStatus("SUCCESS");
          print "TEST STEP 2: Get the Current Operational Mode as Ethernet";
          print "EXPECTED RESULT 2: Should get the Current Operational Mode as Ethernet ";
          print "ACTUAL RESULT 2: Operational Mode is ",Value[1];
          #Get the result of execution
          print "[TEST EXECUTION RESULT] : SUCCESS";

          if Value[2] == "true":
             tdkTestObj.setResultStatus("SUCCESS");
             print "TEST STEP 3: Get the MAC sec Required state ";
             print "EXPECTED RESULT 3: Should get the  MAC sec Required state as true";
             print "ACTUAL RESULT 3: MAC sec Required state is ",Value[2];
             #Get the result of execution
             print "[TEST EXECUTION RESULT] : SUCCESS";
          else:
              tdkTestObj.setResultStatus("FAILURE");
              print "TEST STEP 3: Get the MAC sec Required state ";
              print "EXPECTED RESULT 3: Should get the  MAC sec Required state as true";
              print "ACTUAL RESULT 3: MAC sec Required state is ",Value[2];
              #Get the result of execution
              print "[TEST EXECUTION RESULT] : FAILURE";
       else:
           tdkTestObj.setResultStatus("FAILURE");
           print "TEST STEP 2: Get the Current Operational Mode as Ethernet";
           print "EXPECTED RESULT 2: Should get the Current Operational Mode as Ethernet ";
           print "ACTUAL RESULT 2: Operational  Mode is ",Value[1];
           #Get the result of execution
           print "[TEST EXECUTION RESULT] : FAILURE";
    else:
        tdkTestObj.setResultStatus("FAILURE");
        print "The device is not in ethwan mode. Please check the device setup"
        print "[TEST EXECUTION RESULT] : FAILURE";
    obj.unloadModule("pam");
    obj1.unloadModule("tad");
else:
    print "Failed to load pam  module";
    obj.setLoadModuleStatus("FAILURE");
